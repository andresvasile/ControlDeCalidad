<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        uwAAAbsBOuzj4gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAnBSURBVHhe5Ztt
        jFVHGceHXWkCLjZChdiNyxI1JC1VGpMmRlo3wZRGEU2ammpSo02rkBjDh41WGwg16gdUEiN+sKQNSV+o
        TRZoqQgULgvdCoKVUktLRUp5WUp5W1jB7raUx9//7r3b6eyc+3LOuW2TfZL/vefMnTNn5ndmnnnOnHOd
        mTVUbp+1uN02z+20hWipe9Yedj1WcM/Yfrfd+t021M32VtIK/LaZPFvIu4ljtlpLrMw8FU3MKve8tbp/
        2nz3nK2n8QNuF4k70Q70N9SDnkHb0TbUjbaiAtqCNqOnixoAxHq3gbLWWWvsXFkVTUwj9w8b7/5lnW6v
        7XZ77DIAjDQDgGUAYAAwtxFtoMy/UvZ6zrHOxsfqkEbRxHrER7N70e5yL1gvMq6+AcAaAMAAYACQet1f
        OOfj1hyrUz2KJtYq97LNdS/ZPgAYV9/eRwAGAHNPce4nbW6sbrUqmlhN7lWb6vZbNwAMAPYBAjCGgwGh
        m/2psbpWUzSxktxBm+X+bScBYB8iANJJtmfF6lxJ0cQk0fg73X9sEACWB4BxfI8TiHwAmHuCuj1hd8bq
        nqRoYig+mt0hW0bXNwBYWgAz9potOGj2wAmzvRfMLl0ekrYfOM5vr5BHoNIDGNKT1LVGBxlN9MVHszts
        awFgaQF8lO/lNJq2VjXlWX6UY9Qb0gKQ1lDnGiBEE325I9A8zEZKAF8m38EBSqrTDv6PYwUwLYC1RS2j
        qGi7yoomluV6GfNcjbQAFh5Jvuqn3jLbeHZI2o6Zjl2o86QHoO2KPiGaKLnjePtjOJWUAD7Hb4NB699i
        fxFQ2uQXglmgDQe5iPKVx7fBdyhLjjMtgLW0YXXy7BBPPM48f5xp5Rg7KQCMRXvowr69cNFspn6vMg3O
        /Dt5/1s6qGR7+ilTvSAdAPmDk64rHieMSCgmniCwwCunBXDf65Ti2dFBsyt11WuMA65k/2jgN+7TedMD
        kCg10tYRCScIb/HYaQGMZap7k27r2xymt3oDoTn4EN9U5kc0DNIDMIbCiLA53Gl2bxBfZwBwPY317dEz
        pKeMBB8NetLndVwWAGtoWzA1Dm8Ud05xh/UGGxkA3E1+3+7QMSkB3EG5vn1fQywbAMMX3EVRIwHQ4PEA
        6M0K4E+nKc2z6UpPCWD6s6VCSrZc9cgKYDVt9NYT3gVwxjoBYFkB7MLbl+0i43ZMhXuBagDGoIuXSoVh
        24kZcgAgdVLcCAC78wBQCKawSQqKUgKYRLpvG1S/PACsMS6LB8CdtlYAXM4DwIM4Pd9u1gyQEsDNwUyw
        QnXJpwdcxhkW1xiHAJy1+QCwPAB09hbrOmyL2U8LYDF3jr516pz5AJDmU+QwgPV5AWhj349mz7xtNlnD
        oE4Ak0k/490jqMw25ckPAKXQdnfSWgAwkBcARYLdgR9YpbLrBLCKOvjWrTKyRYIhgAGGQYtzfTYPAJYn
        gJsOjLwLvJdymmoA0ITu5Ry+qaybuEfIGYBignkCsDBvALobvD+IB2SF82atusdPANDKvF+gLqHdrzqk
        vxusBGChc+dsaSMATOB7x4VSCzxTTF84h4OjzNnkn829w2LKLvSNvIeQ7SDvBA2LRgBYTdvpAQ83AoAW
        RCbw3RP4g3qsBygT5BeyLIhUAtBF2+kBhUYAmMiVvYfjexNWe2qx0xz7FQ2ZxgEoCMD+PAFMYfuPlKMw
        OA/rYxptGIDVtB0A/XkBuI18p6lwJTs0wJTGuH7kpNlvKVt6iPNtpg4HglUkmXpBA3tAfy4APs73KhoV
        M01hm/D+P+L4aVoprjINfoqZ4IeU9zh16KIuX9T012AAmYbAFLZfjCx764HHI5Q5Q70jZShcVLZl8coA
        SkMgtRO8moDn5cFSiz17nq48Q0NDDizD7bAPoJU8cyjrlrIo8xZ6x5foMWMFIl0PwAmmnAavovEHgsar
        u/+GsX2FZgJ19xwALADkLoZXGFn6dg4/8Rg3Xe06pj4AxWkwVSC0LpjfVcG7ld+LA7IC+N6+obJrtZf6
        8UcaHrUCKAVCdYfCP+Yq+6bx/l3lCwKhLACuJ38sMqxmm6hbHT2AULjOm6Frj5gNBP3xZ8ofiQR9AF/g
        dz0VWkJ5S/RNmUW9VhLlF8U5pJ3BrLKXq3vPKwjfMyyc8O/Jq6dHvn1WPag2ANwM1Xk73BXE91vYb4pE
        gj6ApcHydr124ZLZeI3vhFng54DwbbFmqOoAhm6HyV/zgsh17PsX/zzkr9aMUAHAkmCFKI09BsBK0+A0
        rrhvBbWjOgBKeXdFqKYlsT8HV/+X3PJWuhn6CcdntfNEltPlMwIA7fiLz8hvlOKAY2+WDsBeYxquAYC3
        JFbDouhE5K1QF6/+RF39BAA30A1D20pE2EHeDvJ2kLeDG6aiOKaDYzqAVtRziN5zI8NnnMZzEAjN5Tc5
        3nfQrRpmAOj21h/021jFBckA3rsoWtyosiz+ncDzL5PjZOwlAVjE8b7JT12j33KIBP+A0yzbCvVOGqs4
        wLcpypsEIFwWL25UeTCyKuj+N+rEFQBMZw4Pn/XrTZH5BxFT6XwCKekH9KJPK94PADQjLYu3C1QAYCYA
        X71odpiufoN+B0APQ7hsA9AeU258vAdEHoxUeTTW5001pxgLzfK0FQDIB3yThr4dQIiZsnxDx3sANpa6
        tGKB6wh3Qx/QhJrlCEs+oNfzAfsJ0oYbPxJA/NFYcafCw1Gv/bYR+knrAT4AzQK3AUFjspo9KE9fAjCO
        b/+QLtUnAODPAtfSe3xbp/xJAJIejpZ2Eh+P+6+7nKYHtMgB1gBAccC3gXDBJxiYeslXdWwJwBh6wOve
        fYaeD35CvyUA+F3wAGUBjjUBQOXH48WEhBckng4WK85SqYfw6iuJ2Fb2lYRjXMlY/DXHTxOUEgBFgnpD
        5FYiudsBdzu9pygAfguAn5RjDHzACs7t2wmArCRtWNRL2hgJyyert8QAVHtBYjgx8orMrDqjuUNUuMkD
        UO+9wDXk6/fn3RptBTNEwr0AZ4m0NZqY8JLUT7m6tdZJ3XqShkNKAJoCv87xmutrtW04zivkFEcCqO8l
        KQkA0dfkZjPfygkqEEoyee5faRhl6AHlOOBr+BKFwucqrDXuYSj+guE1UT5CjX8vgPpfkyur0ouSTYzh
        NrbbmcvbOXlRpLUzpj8mh+Y5wSwAyoGQXpObSr528hVF3nbyXqUYQVGfVG68DyDti5JlZX1VNi8AlabB
        CgCyvSor8ZH5ZekPBEBeL0tLfOTyuvz7BiDP1+V95f2HiQYAaMwfJnyN6r/MlMVQGL1/mvIFgNH5tzlf
        fIzeP076orGj86+zMdELRt+fp5P04f77vLn/A+kUk7h9oSj0AAAAAElFTkSuQmCC
</value>
  </data>
</root>